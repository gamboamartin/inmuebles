<?php

namespace gamboamartin\inmuebles\models;

use base\orm\_modelo_parent;
use gamboamartin\errores\errores;
use PDO;
use stdClass;


class inm_comprador_etapa extends _modelo_parent{
    public function __construct(PDO $link)
    {
        $tabla = 'inm_comprador_etapa';
        $columnas = array($tabla=>false,'pr_etapa_proceso'=>$tabla,'inm_comprador'=>$tabla,
            'pr_proceso'=>'pr_etapa_proceso','pr_etapa'=>'pr_etapa_proceso');

        $campos_obligatorios = array('pr_etapa_proceso_id','inm_comprador_id','fecha');

        $columnas_extra= array();
        $renombres= array();

        $atributos_criticos = array('pr_etapa_proceso_id','inm_comprador_id','fecha');

        parent::__construct(link: $link, tabla: $tabla, campos_obligatorios: $campos_obligatorios,
            columnas: $columnas, columnas_extra: $columnas_extra, renombres: $renombres,
            atributos_criticos: $atributos_criticos);

        $this->NAMESPACE = __NAMESPACE__;
        $this->etiqueta = 'Etapas de Clientes';
    }

    public function alta_bd(array $keys_integra_ds = array('codigo', 'descripcion')): array|stdClass
    {
        $registro = $this->registro;


        $registro = $this->init_row(registro: $registro);
        if(errores::$error){
            return $this->error->error(mensaje: 'Error al integrar descripcion',data:  $registro);
        }

        $this->registro = $registro;

        $r_alta_bd = parent::alta_bd(keys_integra_ds: $keys_integra_ds); // TODO: Change the autogenerated stub
        if(errores::$error){
            return $this->error->error(mensaje: 'Error al insertar comprador',data:  $r_alta_bd);
        }


        $row_udp['etapa'] = $r_alta_bd->registro_obj->pr_etapa_descripcion;
        $upd = (new inm_comprador(link: $this->link))->modifica_bd(registro: $row_udp,
            id: $r_alta_bd->registro_obj->inm_comprador_id);
        if(errores::$error){
            return $this->error->error(mensaje: 'Error al actualizar etapa', data: $upd);
        }


        return $r_alta_bd;
    }

    private function descripcion(array $registro): string
    {
        $descripcion = $registro['inm_comprador_id'];
        $descripcion .= ' '.$registro['pr_etapa_proceso_id'];
        $descripcion .= ' '.$registro['fecha'];
        return trim($descripcion);
    }

    private function init_row(array $registro){


        if(!isset($registro['descripcion'])){

            $registro = $this->integra_descripcion(registro:  $registro);
            if(errores::$error){
                return $this->error->error(mensaje: 'Error al integrar descripcion',data:  $registro);
            }

        }
        return $registro;
    }

    private function integra_descripcion(array $registro){

        $descripcion = $this->descripcion(registro: $registro);
        if(errores::$error){
            return $this->error->error(mensaje: 'Error al obtener descripcion',data:  $descripcion);
        }


        $registro['descripcion'] = $descripcion;
        return $registro;
    }

    public function modifica_bd(array $registro, int $id, bool $reactiva = false,
                                array $keys_integra_ds = array('codigo', 'descripcion')): array|stdClass
    {

        $r_modifica_bd = parent::modifica_bd(registro: $registro,id:  $id,reactiva:  $reactiva,
            keys_integra_ds:  $keys_integra_ds); // TODO: Change the autogenerated stub

        if(errores::$error){
            return $this->error->error(mensaje: 'Error al modificar comprador',data:  $r_modifica_bd);
        }

        $registro = $this->registro(registro_id: $id, columnas_en_bruto: true);
        if(errores::$error){
            return $this->error->error(mensaje: 'Error al obtener registro',data:  $registro);
        }

        unset($registro['descripcion']);
        $registro = $this->init_row(registro: $registro);
        if(errores::$error){
            return $this->error->error(mensaje: 'Error al integrar descripcion',data:  $registro);
        }
        $r_modifica_bd_ds = parent::modifica_bd(registro: $registro,id:  $id,reactiva:  $reactiva,
            keys_integra_ds:  $keys_integra_ds); // TODO: Change the autogenerated stub

        if(errores::$error){
            return $this->error->error(mensaje: 'Error al modificar descripcion',data:  $r_modifica_bd_ds);
        }

        return $r_modifica_bd;

    }


}